import { useState } from "react";
import { BrowserRouter as Router, Routes, Route, useNavigate } from "react-router-dom";

function LandingPage() {
  const navigate = useNavigate();
  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-white p-8 text-center">
      <h1 className="text-5xl font-bold mb-6">ConnectUp</h1>
      <p className="text-xl mb-8 max-w-xl">
        –ü–µ—Ä–≤–∞—è –º–æ–ª–æ–¥—ë–∂–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤
      </p>
      <button
        onClick={() => navigate("/app")}
        className="bg-blue-600 text-white text-lg px-6 py-3 rounded-xl hover:bg-blue-700 transition"
      >
        –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      </button>
    </div>
  );
}

function Dashboard() {
  const [tab, setTab] = useState("events");
  const [form, setForm] = useState({ name: "", role: "", project: "" });
  const [submitted, setSubmitted] = useState(false);

  return (
    <div className="p-6 max-w-4xl mx-auto font-sans">
      <h1 className="text-3xl font-bold mb-4">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
      <div className="mb-4 space-x-2">
        <button onClick={() => setTab("events")} className="bg-blue-500 text-white px-4 py-2 rounded">üìÖ –ò–≤–µ–Ω—Ç—ã</button>
        <button onClick={() => setTab("search")} className="bg-blue-500 text-white px-4 py-2 rounded">üîç –ü–æ–∏—Å–∫</button>
        <button onClick={() => setTab("profile")} className="bg-blue-500 text-white px-4 py-2 rounded">üë§ –ü—Ä–æ—Ñ–∏–ª—å</button>
      </div>

      {tab === "events" && (
        <div>
          <h2 className="text-2xl font-semibold mb-2">–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è</h2>
          <ul className="list-disc pl-6 space-y-1">
            <li>Pitch-—Å–µ—Å—Å–∏—è: 25 –º–∞—è, 18:00</li>
            <li>–°–ø–∏–¥-–Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥: 30 –º–∞—è, 17:00</li>
          </ul>
        </div>
      )}

      {tab === "search" && (
        <div>
          <h2 className="text-2xl font-semibold mb-2">–ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤</h2>
          <p className="mb-2">–ó–¥–µ—Å—å –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç —É–º–Ω—ã–π –ø–æ–¥–±–æ—Ä –ø–æ —Ä–æ–ª—è–º, –Ω–∞–≤—ã–∫–∞–º –∏ —Ü–µ–ª—è–º.</p>
          <button disabled className="bg-gray-300 px-3 py-1 rounded">–ò—â—É CTO</button>
          <button disabled className="bg-gray-300 px-3 py-1 rounded ml-2">–ù–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—É</button>
        </div>
      )}

      {tab === "profile" && (
        <div className="space-y-4">
          {!submitted ? (
            <form
              onSubmit={(e) => {
                e.preventDefault();
                setSubmitted(true);
              }}
              className="space-y-3"
            >
              <input
                placeholder="–ò–º—è"
                value={form.name}
                onChange={(e) => setForm({ ...form, name: e.target.value })}
                className="border p-2 rounded w-full"
              />
              <input
                placeholder="–í–∞—à–∞ —Ä–æ–ª—å (–¥–∏–∑–∞–π–Ω–µ—Ä, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫...)"
                value={form.role}
                onChange={(e) => setForm({ ...form, role: e.target.value })}
                className="border p-2 rounded w-full"
              />
              <textarea
                placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å"
                value={form.project}
                onChange={(e) => setForm({ ...form, project: e.target.value })}
                className="border p-2 rounded w-full"
              />
              <button type="submit" className="bg-green-500 text-white px-4 py-2 rounded">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</button>
            </form>
          ) : (
            <div className="space-y-2">
              <p>‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!</p>
              <p><strong>{form.name}</strong>, —Ä–æ–ª—å: {form.role}</p>
              <p>–ü—Ä–æ–µ–∫—Ç: {form.project}</p>
            </div>
          )}
        </div>
      )}
    </div>
  );
}

export default function ConnectUpApp() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<LandingPage />} />
        <Route path="/app" element={<Dashboard />} />
      </Routes>
    </Router>
  );
}